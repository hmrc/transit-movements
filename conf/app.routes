# microservice specific routes

POST       /traders/:EORI/movements/departures                                      uk.gov.hmrc.transitmovements.controllers.DeparturesController.createDeparture(EORI: EORINumber)

GET        /traders/:EORI/movements                                                 uk.gov.hmrc.transitmovements.controllers.DeparturesController.getDeparturesForEori(EORI: EORINumber)

GET        /traders/:EORI/movements/departures/:movementId                         uk.gov.hmrc.transitmovements.controllers.DeparturesController.getDepartureWithoutMessages(EORI: EORINumber, movementId: MovementId)

GET        /traders/:EORI/movements/departures/:movementId/messages                uk.gov.hmrc.transitmovements.controllers.DeparturesController.getDepartureMessages(EORI: EORINumber, movementId: MovementId, receivedSince: Option[OffsetDateTime] ?= None)

GET        /traders/:EORI/movements/departures/:movementId/messages/:messageId     uk.gov.hmrc.transitmovements.controllers.DeparturesController.getMessage(EORI: EORINumber, movementId: MovementId, messageId: MessageId)

POST       /traders/movements/:movementId/messages                                 uk.gov.hmrc.transitmovements.controllers.MovementsController.updateMovement(movementId: MovementId, triggerId: Option[MessageId] ?= None)

POST       /traders/:EORI/movements/arrivals                                        uk.gov.hmrc.transitmovements.controllers.ArrivalsController.createArrival(EORI: EORINumber)

GET       /traders/:EORI/movements/arrivals                                        uk.gov.hmrc.transitmovements.controllers.ArrivalsController.getArrivalsForEori(EORI: EORINumber)

GET        /traders/:EORI/movements/arrivals/:movementId                         uk.gov.hmrc.transitmovements.controllers.ArrivalsController.getArrivalWithoutMessages(EORI: EORINumber, movementId: MovementId)
